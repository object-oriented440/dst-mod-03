通用的且与项目业务无关的类的组合；可供其他项目使用

此处内容，仅与 Lua 有关

此处的文件需要完善！但是怎么说呢，我感觉没什么需要用到的。。。就很难受。没有业务需求，可恶。。。

2、小心循环依赖问题，A require B，B 又 require A，
解决方法：找出循环引用，然后把 B 合入 A 中，消除掉一个文件就可以了。

原因：使用 Lua require 的模块只有两种状态： 未加载 和 已加载，
并没有所谓的 部分加载 的概念，这也导致了 Lua require 不能处理循环依赖问题。

通用解决方法：解决循环依赖的一个通用方法就是抽取公用模块，让循环依赖的模块解耦，转而共同依赖于这个公用模块。

譬如 模块 A 依赖于 模块 B(需要使用 B.Func)， 模块 B 也依赖于 模块 A(需要使用 A.Func)，
则我们抽取出 模块 C(其具有 A.Func 和 B.Func 的功能)，然后让 模块 A 和 模块 B 去除相互依赖，转而都去依赖 模块 C。